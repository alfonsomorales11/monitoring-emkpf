apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with .Values.prometheus }}
  name: {{ .name }}
  namespace: {{ .namespace }}
  labels:
    app: {{ .appName }}
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: {{ .appName }}
  template:
    metadata:
      labels:
        app: {{ .appName }}
  {{- end }}
    spec:
      containers:
        {{- with .Values.prometheus.containers.prometheus }}
        - name: {{ $.Values.prometheus.name }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          args:
            {{- range .args }}
              - {{ . | quote }}
            {{- end }}
          ports:
            - containerPort: {{ .port }}
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /prometheus-data
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
          securityContext:
            runAsUser: {{ .runAsUser }}
        {{- end }}
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-data-volume
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers